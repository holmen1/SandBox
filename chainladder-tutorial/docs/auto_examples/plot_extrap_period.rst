.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_extrap_period.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_extrap_period.py:


================================
Extrapolation Period Sensitivity
================================

This example demonstrates the ``extrap_periods`` functionality of the `TailCurve`
estimator.  The estimator defaults to extrapolating out 100 periods.  However,
we can see that the "Inverse Power" curve fit doesn't converge to its asymptotic
value.




.. image:: /auto_examples/images/sphx_glr_plot_extrap_period_001.png
    :alt: Curve Fit Sensitivity to Extrapolation Period
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [Text(0, 0.5, 'Tail Factor')]





|


.. code-block:: default

    import chainladder as cl

    tri = cl.load_sample('clrd').groupby('LOB').sum().loc['medmal', 'CumPaidLoss']

    # Create a fuction to grab the scalar tail value.
    def scoring(model):
        """ Scoring functions must return a scalar """
        return model.tail_.iloc[0, 0]

    # Create a grid of scenarios
    param_grid = dict(
        extrap_periods=list(range(1, 100, 6)),
        curve=['inverse_power', 'exponential'])

    # Fit Grid
    model = cl.GridSearch(cl.TailCurve(), param_grid=param_grid, scoring=scoring).fit(tri)

    # Plot results
    model.results_.pivot(columns='curve', index='extrap_periods', values='score').plot(
        grid=True, ylim=(1,None), title='Curve Fit Sensitivity to Extrapolation Period').set(
        ylabel='Tail Factor');


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.848 seconds)


.. _sphx_glr_download_auto_examples_plot_extrap_period.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_extrap_period.py <plot_extrap_period.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_extrap_period.ipynb <plot_extrap_period.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
