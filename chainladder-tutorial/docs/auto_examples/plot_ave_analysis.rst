.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_ave_analysis.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_ave_analysis.py:


===========================
Actual Vs Expected Analysis
===========================

This example demonstrates how you can slice triangle objects to perform a
typical 'Actual vs Expected' analysis.  We will use Medical Malpractice
payment patterns for the demo.



.. image:: /auto_examples/images/sphx_glr_plot_ave_analysis_001.png
    :alt: Calendar Period 1997 Performance
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [Text(0, 0.5, 'Actual - Expected'), Text(0.5, 0, 'Accident Period'), Text(0.5, 1.0, 'Calendar Period 1997 Performance')]





|


.. code-block:: default


    import chainladder as cl

    # Load the data
    tri_1997 = cl.load_sample('clrd')
    tri_1997 = tri_1997.groupby('LOB').sum().loc['medmal']['CumPaidLoss']

    # Create a triangle as of the previous valuation and build IBNR model
    tri_1996 = tri_1997[tri_1997.valuation < '1997']
    model_1996 = cl.Chainladder().fit(cl.TailCurve().fit_transform(tri_1996))

    # Slice the expected losses from the 1997 calendar period of the model
    ave = model_1996.full_triangle_.dev_to_val()
    ave = ave[ave.valuation==tri_1997.valuation_date].rename('columns', 'Expected')

    # Slice the actual losses from the 1997 calendar period for prior AYs
    ave['Actual'] = tri_1997.latest_diagonal[tri_1997.origin < '1997']
    ave['Actual - Expected'] = ave['Actual'] - ave['Expected']

    # Plotting
    ave.to_frame().T.plot(
        y='Actual - Expected', kind='bar', legend=False, grid=True).set(
        title='Calendar Period 1997 Performance',
        xlabel='Accident Period', ylabel='Actual - Expected');


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.298 seconds)


.. _sphx_glr_download_auto_examples_plot_ave_analysis.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_ave_analysis.py <plot_ave_analysis.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_ave_analysis.ipynb <plot_ave_analysis.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
