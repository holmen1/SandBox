@page
@model AktuarieAppar.Pages.SGB.IndexModel

    <h3>
        DISCLAIMER: Otestade appar under utveckling
        <span style="color:Tomato;"> ABSOLUTELY NO WARRANTY</span> ¯\_(ツ)_/¯
    </h3>


<table border="1">
    <thead>
        <tr>
            <th></th>
            <th>Gällande</th>
            <th>Villkor</th>
            <th>Ändras</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Fenix</td>
            <td>@Model.premiegrundFenix</td>
            <td>|SGB10 * @Model.factorFenix - @Model.premiegrundFenix| < @Model.tol & |SGB10_löpandemedel * @Model.factorFenix - @Model.premiegrundFenix| < @Model.tol</td>
            <td>@Model.uppdateraFenix</td>
        </tr>
        <tr>
            <td>Inca</td>
            <td>@Model.premiegrundInca</td>
            <td>|SGB20 * @Model.factorInca - @Model.premiegrundInca| < @Model.tol & |SGB20_löpandemedel * @Model.factorInca - @Model.premiegrundInca| < @Model.tol</td>
            <td>@Model.uppdateraInca</td>
        </tr>
        <tr>
            <td>GFS</td>
            <td>@Model.premiegrundGFS</td>
            <td>|SGB20 * @Model.factorGFS - @(Model.referensGFS * 100)| < @Model.tol & |SGB20_löpandemedel * @Model.factorGFS - @(Model.referensGFS * 100)| < @Model.tol</td>
            <td>@Model.uppdateraGFS</td>
        </tr>
    </tbody>
</table>

<div id="diff" style="width: 800px; height: 400px;"></div>

<table border="1">
    <thead>
        <tr>
            <th></th>
            <th>
                Par
            </th>
            <th>
                3m medel
            </th>
            <th>
                Värdepapper
            </th>
            <th>
                Förfallodag
            </th>
            <th>
                Värdedatum
            </th>
            <th>
                År till förfall
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>10-åring</td>
            <td>
                @Html.DisplayFor(modelItem => Model.SGB10Y)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.SGB10Y_3m)
            </td>
            <td>@Model.vardepapper10</td>
            <td>@Model.forfall10</td>
            <td>@Model.ValueDate.ToShortDateString()</td>
            <td>@(Model.forfall10.Subtract(Model.ValueDate).Days / 365.0)</td>
        </tr>
        <tr>
            <td>20-åring</td>
            <td>
                @Html.DisplayFor(modelItem => Model.SGB20Y)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.SGB20Y_3m)
            </td>
            <td>@Model.vardepapper20</td>
            <td>@Model.forfall20</td>
            <td>@Model.ValueDate.ToShortDateString()</td>
            <td>@(Model.forfall20.Subtract(Model.ValueDate).Days / 365.0)</td>
    </tbody>
</table>

<div id="bond" style="width: 800px; height: 400px;"></div>

<table class="table">
    <thead>
        <tr>
            <th>
                Datum
            </th>
            <th>
                1060
            </th>
            <th>
                1053
            </th>
            <th>
                1060 3m
            </th>
            <th>
                1053 3m
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var date in Model.PriceSeries10.Keys)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => date)
                </td>
                <td>
                    @Model.PriceSeries10[date]
                </td>
                <td>
                    @Model.PriceSeries20[date]
                </td>
                <td>
                    @Model.AverageSeries10[date]
                </td>
                <td>
                    @Model.AverageSeries20[date]
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart'] });
    </script>
    <script type="text/javascript">
    function drawVisualization() {
        var data = google.visualization.arrayToDataTable([
            ['Date', 'Fenix', 'Fenix', 'Inca', 'Inca', 'GFS', 'GFS', 'limit', 'limit'],
            @foreach (var p in Model.DiffSeries)
            {
                <text>[new Date(@p.Key.Year, @p.Key.Month-1, @p.Key.Day).toLocaleDateString(),
                       @p.Value[0], @p.Value[1],
                       @p.Value[2],@p.Value[3],
                       @p.Value[4], @p.Value[5],
                       @p.Value[6], @p.Value[7]],</text>
            }
        ]);

        var options = {
          curveType: "function",
          width: 800, height: 400,
          colors: ['green', 'green', 'blue', 'blue', 'cyan', 'cyan', 'red', 'red'],
          series: {
                0: { visibleInLegend: false },
                2: { visibleInLegend: false },
                4: { visibleInLegend: false },
                6: { visibleInLegend: false, lineWidth: 4 },
                7: { lineWidth: 4 },
            },
        };
        // Create and draw the visualization.
        new google.visualization.LineChart(document.getElementById('diff')).
            draw(data, options);
      }
      google.charts.setOnLoadCallback(drawVisualization);
    </script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart'] });
    </script>
    <script type="text/javascript">
    function drawVisualization() {
        var data = google.visualization.arrayToDataTable([
            ['Maturity', '1060', '3m medel', '1053', '3m medel'],
            @foreach (var d in Model.PriceSeries10.Keys)
            {
                <text>[new Date(@d.Year, @d.Month-1, @d.Day).toLocaleDateString(),
                       @Model.PriceSeries10[d], @Model.AverageSeries10[d], @Model.PriceSeries20[d], @Model.AverageSeries20[d]],</text>
            }
        ]);

        var options = {
          title: 'Statsobligationer',
          curveType: "function",
          width: 800, height: 400,
          colors: ['green', 'green', 'blue', 'blue'],
            series: {
                1: { lineDashStyle: [2, 2] },
                3: { lineDashStyle: [2, 2] },
            },
        };

        // Create and draw the visualization.
        new google.visualization.LineChart(document.getElementById('bond')).
            draw(data, options);
      }
      google.charts.setOnLoadCallback(drawVisualization);
    </script>
}

<h3>DISCLAIMER: Otestade appar under utveckling
        <span style="color:Tomato;"> ABSOLUTELY NO WARRANTY</span> ¯\_(ツ)_/¯</h3>
<h3>TODO</h3>

<p>- Refactoring</p>
<p>- Refactoring</p>
<p>- Code review .NET</p>
<p>- Användartest Aktuarie</p>
<p>- Parametrar i databas</p>
<p>- Unit tests</p>
<p>- Logging</p>
<p>- Consistencychecks</p>
<p>- Exceptions</p>
<p>- async</p>
<p>- DW insert</p>
